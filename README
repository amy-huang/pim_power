This tool is meant to measure power consumption of PIM simulations on SMCSim
with McPAT for host cores, PIM units, caches, and interconnects and CACTI
for the hybrid memory cube.

 __  __      ____      _____
|  \/  | ___|  _ \ / \|_   _|
| |\/| |/ __| |_) / _ \ | |  
| |  | | (__|  __/ ___ \| |  
|_|  |_|\___|_| /_/   \_\_|                              

------------------------------------------------------------------------------------------
| McPAT is run with ./mcpat/mcpat <stats file> <config file> <mcpat XML file>,
| printing power calculations to terminal.
|     - The stats.txt is created by gem5 during simulation, and can be found 
|       in SMC-WORK/scenarios/<a number>/multithread_<something something>. 
|       For example, "SMC-WORK/scenarios/31/multithread_fc_q-p"
|       Its format is [column 1]: Stat name [column 2]: Stat value; for 
|       example, "sim_ticks   3736252"
|     - The config.json is found in the same place, and shows the hierarchy 
|       of components in the system.
|     - The XML file you must prepare yourself. For each component, like
|       "core" or "core.icache", there are parameter names and values that
|       go together as well as statistic names and values. 
|       For example, 
|       <stat name="idle_cycles" value="11840"/>
------------------------------------------------------------------------------------------

Most of the work is getting the right parameters to match the simulator 
configuration and statistic values from the stats file.

------------------------------------------------------------------------------------------
| GEM5ToMcPAT makes it easy to pull parameter values from the config file 
| and statistic values from the config and stats file. It is run with:
| python ./gem5tomcpat/GEM5ToMcPAT.py <stats file> <config file> <gem5tomcpat XML file>
|
| The gem5tomcpat XML file, instead of having numerical values for each stat, 
| should have the name of a stats file stat to pull the value from.
| E.g. <stat name="idle_cycles" value="stats.system.cpu.totalIdleCycles"/>
| This will pull the stat system.cpu.totalIdleCycles from the stats file, and replace
| the value with that number.
|
| Params can similarly be pulled from the config file.
| By default, the result is written to mcpat-out.xml; this would be the mcpat xml in file.
------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
| My script replace_xml_vals.py helps in making the gem5tomcpat XML file, with stat and 
| param names in place of values. It's run with: 
| python <input XML file> <replacements text file> <output XML file>
| The input XML file can be any XML file from mcpat/ProcessorDescriptionFiles as a base. 
| The replacements text file dictates what parameter values or stat names to use for each
| XML param or stat, with columns being component, name, and value.
| This is less tedious than directly editing an XML file, though the comments in 
| the templates are informative to look at.
| The output XML file can then be used as the input XML file to gem5tomcpat.
------------------------------------------------------------------------------------------

So here is what to do in chronological order.
    1) Get python (2.7.6 or beyond). 
    2) Clone gem5tomcpat and mcpat into this directory:
        i) https://bitbucket.org/dskhudia/gem5tomcpat
        ii) https://github.com/HewlettPackard/mcpat
    3) Pick an XML template to use from mcpat/ProcessorDescriptionFiles
        3.5) Clean it - remove all comments, and remove any spaces in the value
             fields. E.g. value="3,2,1" instead of value="3, 1,3 "
    4) Make a replacements text file like the example one in this dir,
       according to your simulator's stats file and system configuration
       (This will take the longest)
    5) Run replace_xml_vals.py to get the gem5tomcpat xml file
    6) Have stats and config files from simulation
    7) Run GEM5ToMcPAT to get mcpat-out.xml
    8) Make and run mcpat to get final power numbers

  ____    _    ____ _____ ___ 
 / ___|  / \  / ___|_   _|_ _|
| |     / _ \| |     | |  | | 
| |___ / ___ \ |___  | |  | | 
 \____/_/   \_\____| |_| |___|

Cacti is much easier to use than McPAT. It takes hybrid memory cube (HMC) parameters
in a config file, and then gives energy per activation, read/write, and precharge.
My next script will calculate total energy consumed based on number of reads and
writes pulled from the stats file and multiplied with energy per each of those.

What to do:
    1) Clone CACTI into this directory:
        i) https://github.com/HewlettPackard/cacti
    1.5) Move line "tsv_length *= g_ip->num_die_3d;" in parameter.cc to line 846,
         according to https://github.com/HewlettPackard/cacti/issues/2
    2) Use 3DDRAM_Samsung3D8Gb_extened.cfg as a basis for putting in HMC 
       specifications use in your simulation
       (This should take the longest)
    2.5) Make sure to include -num_clk and -mem_data_width
         Number of clock pins and width of memory data bus; mitigates segfaults
    3) Make and run CACTI to get energy per operation
    4) Use (non existent right now) script to combine that with read/write numbers
       in stats file to get total
 _____                           _           
| ____|_  ____ _ _ __ ___  _ __ | | ___  ___ 
|  _| \ \/ / _` | '_ ` _ \| '_ \| |/ _ \/ __|
| |___ >  < (_| | | | | | | |_) | |  __/\__ \
|_____/_/\_\__,_|_| |_| |_| .__/|_|\___||___/
                          |_|                

In the directory: 
    ARM_A9_2Ghz.xml is a template XML from mcpat/ProcessorDescriptionFiles
    clean_ARM.xml is the same XML without comments or spaces in the value fields
    replace.txt is the replacements text file used in my script
    test-ARM.xml is the resulting text file for gem5tomcpat
    cut_stats.txt and config.json are from one of my simulations
    mcpat-out.xml is the result from running gem5tomcpat

List of command line commands done from all encompassing directory:

cp mcpat/ProcessorDescriptionFiles/ARM_A9_2GHz.xml .
cp ARM_A9_2GHz.xml clean_ARM.xml
vim clean_ARM.xml
    The vim commands to clean this were:
    Delete 1 line comments :% s/<!--.\{-}-->//g
    Delete beginning line of multi line comments :g/<!--/d
    Delete end line of multi line comments :g/-->/d
    Delete any lines without a "<" symbol :%g!/</d
python replace_xml_vals.py clean_ARM.xml replace.txt test-ARM.xml
python gem5tomcpat/GEM5ToMcPAT.py cut_stats.txt config.json test-ARM.xml
mcpat/mcpat -infile mcpat-out.xml -print_level 5


Amy Huang, summer UTRA 2018
